
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/
version = modversion
group = modgroup // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = modname +"-"+ mcversion


sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = mcversion + "-" + forgeversion + forgeversion_suffix
    runDir = "run"
    mappings = mcpsnapshot
    
    replace '@VERSION@', project.version
}

repositories {
    maven { // Hwyla (Waila updated for 1.10)
        name "TehNut Maven"
        url "http://tehnut.info/maven/"
    }
    maven { // JEI
        name = "Progwml6 Maven"
        url "http://dvs1.progwml6.com/files/maven/"
    }
    maven { // for Chickens
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
	maven { // TOP
		name 'tterrag maven'
	    url "http://maven.tterrag.com/"
	}
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
    maven { // Craft Tweaker
		url "http://maven.blamejared.com/" 
	}
}


dependencies {
    deobfCompile "chickens:chickens:${chickens_version}"
    deobfCompile "mcp.mobius.waila:Hwyla:${HWYLA_version}_${mcversion}"
	deobfCompile "mcjty.theoneprobe:TheOneProbe-1.12:${top_version}"
	
	// compile against the JEI API
    deobfCompile "mezz.jei:jei_${mcversion}:${jei_version}:api"

    deobfCompile "cofh:RedstoneFlux:1.12-2.1.0.7:universal"

	deobfCompile "CraftTweaker2:CraftTweaker2-API:${crafttweaker_version}"
	
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_${mcversion}:${jei_version}"

}

jar {
    manifest {
        attributes 'FMLAT': 'hatchery_at.cfg'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
    manifest {
        attributes 'FMLAT': 'hatchery_at.cfg'
    }
}

task apiZip(type: Zip) {
    from(sourceSets.main.java) {
        include "com/gendeathrow/hatchery/api/**"
    }
    classifier = 'api'
}

task apiJar(type: Jar) {
    from(sourceSets.main.java) {
        include "com/gendeathrow/hatchery/api/**"
    }
    classifier = 'api'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
